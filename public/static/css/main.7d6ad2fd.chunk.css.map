{"version":3,"sources":["index.css","App.module.scss","components/Globals/_vars.scss","Footer.module.scss","Page.module.scss","../Globals/_vars.scss","../Globals/_include-media.scss","NotFound.module.scss","Loader.module.scss","WorldMap.module.scss","Nav.module.scss"],"names":[],"mappings":"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","file":"main.7d6ad2fd.chunk.css","sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  /* brug 100vw på body's width, og på resten af siden er 100% fint nok */\n  width: 100vw;\n  /* min-height: 100vh; */\n  overflow-x: hidden;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\nh1, h2, h3, h4, h5, h6, p {\n  margin-top: 0;\n}\n\nfigure {\n  margin: 0;\n}","@import \"./components/Globals/vars\";\n\n.container {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-height: 100vh;\n  padding-top: $navHeight;\n}\n\n","@import \"./include-media\";\n\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n);\n\n$container-padding: 1rem;\n\n// mobile\n$enter-mobile-time: 300ms;\n$exit-mobile-time: 300ms;\n$enter-mobile-delay: 0;\n\n$enter-mobile-trans-rev: 100%, 0%;\n$enter-mobile-trans: -100%, 0%;\n$exit-mobile-trans-rev: -100%, 0%;\n$exit-mobile-trans: 100%, 0%;\n\n// dekstop\n$enter-time: 450ms;\n$exit-time: 200ms;\n$enter-delay: $exit-time * 0.75;\n\n$enter-trans: 0%, 9px;\n$enter-trans: 0%, 9px;\n$exit-trans: 0%, 5px;\n\n\n$navHeight: 3rem;\n\n\n$navColorBg: #333;","@import '../Globals/vars';\n\n$bgColoer: lighten($navColorBg, 10);\n\n.container {\n    background: $bgColoer;\n    width: 100%;\n    height: 10rem;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n}","@import \"../Globals/vars\";\n\n.page {\n  position: relative;\n  width: 100%;\n  display: flex;\n  min-height: calc(100vh - #{$navHeight});\n  justify-content: space-between;\n  flex-direction: column;\n  // overflow: hidden;\n  // padding: 0 15vw;\n\n  // forslag:\n  // lav en måde at smide en ekstra klasse på section med page klassen\n  // jo ikke sikkert alle sider skal have padding og samme background's farve\n  // plus du kan spare div'en pageInner væk og kan beholde din h2'er inde i page component :)\n  // &.home {\n  //   // sætter du padding her, vil du ikke kunne få noget længere inde i den her kasse til at fylde 100%\n  //   // f.eks en divider med en anden baggrundsfarve hvor den farve gerne skulle være 100% af siden :)\n  //   padding: $container-padding;\n  //   background: rgb(224, 224, 224);\n  // }\n\n  // h2 {\n  //   margin-top: 0;\n  // }\n  button {\n    margin: 1rem 0;\n    color: rgb(63, 63, 63);\n    background: #4435352a;\n    border: none;\n    border-radius: 0.2rem;\n    padding: 0.5rem 0.5rem;\n    border-radius: 0.2rem;\n    // display: flex;\n    transition: all 0.3s ease;\n    &:hover {\n      transform: scale(1.1);\n      box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.5);\n    }\n    &:active {\n      transform: scale(0.9);\n      box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.5);\n    }\n  }\n}\n\n.container {\n  margin: 0 15vw;\n  transition: margin 0.1s ease;\n  @include media(\"<tablet\") {\n    transition: margin 0.6s ease;\n    margin: 0 1rem;\n  }\n}\n\n.darkmode {\n  background: #333;\n  color: white;\n}\n\n@mixin animation() {\n  width: 100vw;\n  position: fixed !important;\n  top: $navHeight;\n  left: 0;\n}\n\n.enterRev {\n  @include animation();\n  @include media(\"<tablet\") {\n    transform: translate($enter-mobile-trans-rev);\n  }\n\n  @include media(\">tablet\") {\n    opacity: 0.01;\n    transform: translate($enter-trans);\n  }\n}\n.enter {\n  @include animation();\n\n  @include media(\"<tablet\") {\n    transform: translate($enter-mobile-trans);\n  }\n  @include media(\">tablet\") {\n    opacity: 0.01;\n    transform: translate($enter-trans);\n  }\n}\n\n.enterActive {\n  @include animation();\n  @include media(\"<tablet\") {\n    transform: translate(0%, 0%);\n    transition: all $enter-mobile-time ease-in-out;\n    transition-delay: $enter-mobile-delay;\n  }\n  @include media(\">tablet\") {\n    opacity: 1;\n    transform: translate(0%, 0%);\n    transition: all $enter-time ease-in-out;\n    transition-delay: $enter-delay;\n  }\n}\n\n.exit {\n  @include animation();\n\n  @include media(\"<tablet\") {\n    transform: translate(0%, 0%);\n  }\n  @include media(\">tablet\") {\n    opacity: 1;\n    transform: translate(0%, 0%);\n  }\n}\n\n.exitActiveRev {\n  @include animation();\n  @include media(\"<tablet\") {\n    transform: translate($exit-mobile-trans-rev);\n    transition: all $exit-mobile-time;\n  }\n  @include media(\">tablet\") {\n    opacity: 0.01;\n    transform: translate($exit-trans);\n    transition: all $exit-time;\n  }\n}\n\n.exitActive {\n  @include animation();\n  @include media(\"<tablet\") {\n    transform: translate($exit-mobile-trans);\n    transition: all $exit-mobile-time;\n  }\n  @include media(\">tablet\") {\n    opacity: 0.01;\n    transform: translate($exit-trans);\n    transition: all $exit-time;\n  }\n}\n","@import \"./include-media\";\n\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n);\n\n$container-padding: 1rem;\n\n// mobile\n$enter-mobile-time: 300ms;\n$exit-mobile-time: 300ms;\n$enter-mobile-delay: 0;\n\n$enter-mobile-trans-rev: 100%, 0%;\n$enter-mobile-trans: -100%, 0%;\n$exit-mobile-trans-rev: -100%, 0%;\n$exit-mobile-trans: 100%, 0%;\n\n// dekstop\n$enter-time: 450ms;\n$exit-time: 200ms;\n$enter-delay: $exit-time * 0.75;\n\n$enter-trans: 0%, 9px;\n$enter-trans: 0%, 9px;\n$exit-trans: 0%, 5px;\n\n\n$navHeight: 3rem;\n\n\n$navColorBg: #333;","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}",".drawingBoard {\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\n.canvas {\n  width: 100%;\n  height: 100%;\n  margin: 0 1rem;\n}\n\n@keyframes attention {\n  0% {\n    transform: rotateZ(0deg) scale(1);\n  }\n  50% {\n    transform: rotateZ(-180deg) scale(0.9);\n  }\n  75% {\n    transform: rotateZ(360deg) scale(1.2);\n  }\n}\n\n$handle-size: 3rem;\n.showIcon {\n  background: transparent;\n  outline: none;\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  svg {\n    background: inherit;\n    color: #333;\n    height: $handle-size;\n    width: $handle-size;\n    transition: transform 1s ease;\n\n    animation-name: attention;\n    animation-play-state: running;\n    animation-delay: 0.6s;\n    animation-iteration-count: 1;\n    animation-timing-function: ease-in-out;\n    animation-duration: 3s;\n  }\n}\n\n.toolBox {\n  position: absolute;\n  z-index: 2000;\n  left: 100%;\n  transform: translateX(-#{$handle-size});\n  transition: all 1s;\n  display: flex;\n  padding: 5% 0;\n\n  &:hover {\n    transform: translateX(-100%);\n    .showIcon {\n      svg {\n        transform: rotateZ(360deg);\n      }\n    }\n  }\n}\n\n.toolButtons {\n  padding: 0.2rem 1rem;\n  button {\n    height: 1.5rem;\n    width: 1.5rem;\n    padding: 0.2rem;\n    margin: 0;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    svg {\n      transition: transform 1s ease;\n      color: white;\n      background: rgba(0, 0, 0, 0.438);\n    }\n  }\n}\n",".container {\n  width: 100%;\n  margin: 1rem 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}",".mapContainer {\n\n  &:fullscreen {\n    background-color: white;\n  }\n}","@import \"../Globals/vars\";\n\n@keyframes ActiveLink {\n  from {\n    background: rgba(161, 64, 64, 0);\n    \n  }\n  to {\n    background: rgba(161, 64, 64, 1);\n\n  }\n}\n\n@keyframes Link {\n  from {\n    \n    background: rgba(161, 64, 64, 1);\n  }\n  to {\n    \n    background: rgba(161, 64, 64, 0);\n  }\n}\n\n\n.nav {\n  display: flex;\n  align-items: center;\n  height: $navHeight;\n  background: $navColorBg;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 99999;\n}\n\n.navbar {\n  display: flex;\n  height: 100%;\n\n  li {\n    height: 100%;\n  }\n}\n\n.navLink {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 1rem;\n  height: 100%;\n  color: white;\n  text-decoration: none;\n  transition: background-color 0.5s ease-in-out;\n  animation-name: Link;\n  animation-play-state: running;\n  animation-timing-function: ease-in;\n  animation-fill-mode: forwards;\n  animation-duration: 0.5s;\n  animation-iteration-count: 1;\n}\n\n.navLinkActive {\n  @extend .navLink;\n  cursor: pointer;\n  user-select: none;\n  animation-name: ActiveLink;\n  animation-play-state: running;\n  animation-timing-function: ease-out;\n  animation-fill-mode: forwards;\n  animation-duration: 0.5s;\n  animation-iteration-count: 1;\n}\n\n.exitActive {\n  animation-name: Link;\n  animation-play-state: running;\n  animation-timing-function: ease;\n  animation-fill-mode: forwards;\n  animation-duration: 0.5s;\n  animation-iteration-count: 1;\n}\n\n.enterActive {\n  cursor: pointer;\n  user-select: none;\n  animation-name: ActiveLink;\n  animation-play-state: running;\n  animation-timing-function: ease;\n  animation-fill-mode: forwards;\n  animation-duration: 0.5s;\n  animation-iteration-count: 1;\n}\n"]}